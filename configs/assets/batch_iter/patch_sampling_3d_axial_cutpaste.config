from functools import partial

import numpy as np

from dpipe.batch_iter import Infinite, multiply, combine_pad
from dpipe.im.utils import prepend_dims

from ood.batch_iter.cutpaste import load_pair_by_random_ids, generate_anomaly_mask
from ood.batch_iter.pipeline import get_random_patch_of_slices, center_crop


# batch iter:
random_state = np.random.RandomState(seed)
patient_sampling_weights = n_tumors / np.sum(n_tumors)
max_anomaly_size = 128

batch_iter = Infinite(
    load_pair_by_random_ids(load_x=load_x, ids=train_ids, weights=patient_sampling_weights, random_state=random_state),
    partial(generate_anomaly_mask, random_state=random_state, max_anomaly_size=max_anomaly_size),
    partial(get_random_patch_of_slices, z_patch_size=z_patch_size, random_state=random_state),
    center_crop,
    multiply(func=prepend_dims),
    batch_size=batch_size, batches_per_epoch=batches_per_epoch, buffer_size=1,
    combiner=partial(combine_pad, padding_values=[0, 0]),
)
