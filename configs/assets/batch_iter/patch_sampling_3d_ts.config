from functools import partial

from dpipe.batch_iter import Infinite, load_by_random_id, multiply, combine_pad
from dpipe.im.utils import prepend_dims
from ood.batch_iter.augmentations import augm_pipeline_3d_tumor_sampling
from ood.batch_iter.pipeline import extract_patch_of_slices, center_choice


# batch iter:
random_state = np.random.RandomState(seed)
p_augm = 1.
nonzero_fraction = 0.75
patient_sampling_weights = n_tumors / np.sum(n_tumors)
load_centers = dataset.load_tumor_centers


batch_iter = Infinite(
    load_by_random_id(load_x, load_y, load_centers,
                      ids=train_ids, weights=patient_sampling_weights, random_state=seed),
    partial(center_choice, y_patch_size=y_patch_size, random_state=random_state,
            nonzero_fraction=nonzero_fraction),
    partial(augm_pipeline_3d_tumor_sampling, x_patch_size=x_patch_size[-1], p=p_augm,
            random_state=random_state),
    partial(extract_patch_of_slices, x_patch_size=x_patch_size, y_patch_size=y_patch_size),
    multiply(func=prepend_dims),
    
    batch_size=batch_size, batches_per_epoch=batches_per_epoch, buffer_size=1,
    combiner=partial(combine_pad, padding_values=[0, 0]),
)