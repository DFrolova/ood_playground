import numpy as np

from amid.lidc import LIDC
from connectome import Chain, Apply, CacheToRam

from ood.dataset.lidc import CanonicalCTOrientation, RenameFields
from ood.dataset.utils import Shape, Zoom, ScaleHU
from ood.paths import LIDC_DATA_PATH
from ood.dataset.augm_transforms import elastic_transform, blur_transform, slice_drop_transform, contrast_transform, \
    corruption_transform, pixel_shuffling_transform, ApplyAugm


dataset = None
load_x = None

def get_dataset(param, transform_fn):
    dataset_raw = Chain(
        LIDC(root=LIDC_DATA_PATH),
        RenameFields(),
        ApplyAugm(param=param, transform_fn=transform_fn),
        CanonicalCTOrientation()
    )

    max_cache_size = 1
    dataset = Chain(
        dataset_raw,
        Zoom(new_spacing=voxel_spacing),
        ScaleHU(),
        Shape(),
        Apply(image=np.float16, mask=np.bool_),
        CacheToRam(size=max_cache_size),
        Apply(image=np.float32, mask=np.float32)
    )
    return dataset

all_transforms = [elastic_transform, blur_transform, slice_drop_transform, contrast_transform,
                  corruption_transform, pixel_shuffling_transform]

all_params = {
    elastic_transform: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.],
    blur_transform: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, .99],
    slice_drop_transform: np.round(np.arange(0.05, 0.40001, 0.05), 2),
    contrast_transform: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7],
    corruption_transform: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7],
    pixel_shuffling_transform: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, .99],
}

all_datasets = [get_dataset(param, transform_fn) for transform_fn in all_transforms for param in all_params[transform_fn]]
load_x_fns = [dataset.image for dataset in all_datasets]
load_y_fns = [dataset.mask for dataset in all_datasets]
full_uid_fns = [dataset.modified_id for dataset in all_datasets]


# from amid.internals import CacheToDisk
# from connectome import Chain, Apply, CacheToRam

# from ood.dataset.lidc import CanonicalCTOrientation, NumberOfTumors
# from ood.dataset.lidc_augm import LIDC_augm
# from ood.dataset.utils import Shape, Zoom, ScaleHU
# from ood.paths import LIDC_AUGM_DATA_PATH


# dataset_raw = Chain(
#     LIDC_augm(root=LIDC_AUGM_DATA_PATH),
#     NumberOfTumors(),
#     CacheToDisk('n_tumors'),
#     CanonicalCTOrientation()
# )

# max_cache_size = 1
# dataset = Chain(
#     dataset_raw,
#     Zoom(new_spacing=voxel_spacing),
#     ScaleHU(),
#     Shape(),
#     Apply(image=np.float16, mask=np.bool_),
#     CacheToRam(size=max_cache_size),
#     Apply(image=np.float32, mask=np.float32)
# )

# load_y = dataset.mask
