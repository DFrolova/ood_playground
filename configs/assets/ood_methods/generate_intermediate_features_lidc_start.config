from ood.utils import skip_predict, skip_calculating_metrics
from ood.torch.model import inference_step_ood_lidc_last
from ood.torch.module.unet import UNet3DLunaWithFeatures
from dpipe.predict import add_extract_dims, divisible_shape
from dpipe.torch import inference_step
from dpipe.predict.shape import patches_grid
from ood.batch_iter import SPATIAL_DIMS
from ood.predict import patches_grid_ood_single_feature, divisible_shape_ood_single_feature

    
architecture = UNet3DLunaWithFeatures(init_bias=-3)

@add_extract_dims(2)
@patches_grid_ood_single_feature(z_patch_size, z_patch_size, axis=-1)
@divisible_shape_ood_single_feature(divisor=z_patch_size, padding_values=np.min, axis=-1)
def predict_with_features(image):
    return inference_step_ood_lidc_last(image, architecture=architecture, activation=torch.sigmoid, amp=amp)


predict_to_dir = partial(commands.predict, ids=test_ids, load_x=load_x, predict_fn=predict_with_features)
predict_logits_to_dir = skip_predict
evaluate_individual_metrics = skip_calculating_metrics
saved_model_path = os.path.join(pretrained_model_path, f'seed{seed}/experiment_0/model.pth')

max_cache_size = 1 # todo remove