import os

from ood.utils import skip_predict, skip_calculating_metrics
from ood.predict import divisible_shape_ood, patches_grid_ood
from ood.torch.model import inference_step_ood
from dpipe.predict import add_extract_dims, divisible_shape
from ood.batch_iter import SPATIAL_DIMS


pred_patch_stride = pred_patch_size

@add_extract_dims(2, sequence=True)
@patches_grid_ood(pred_patch_size, pred_patch_stride, axis=SPATIAL_DIMS)
@divisible_shape_ood(divisor=[16, ] * 3, padding_values=np.min, axis=SPATIAL_DIMS)
def predict_with_features(image):
    return inference_step_ood(image, architecture=architecture, activation=torch.sigmoid, amp=amp)


predict_features = lambda x: predict_with_features(x)[1]  # 0 - prediction, 1 - features
predict_to_dir = partial(commands.predict, ids=test_ids, load_x=load_x, predict_fn=predict_features)
predict_logits_to_dir = skip_predict
evaluate_individual_metrics = skip_calculating_metrics
saved_model_path = os.path.join(pretrained_model_path, f'seed{seed}/experiment_0/model.pth')
