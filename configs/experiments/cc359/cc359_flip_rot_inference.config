from ...assets.core import *
from ...assets.utils.no_pred import *
# from ...assets.utils.no_pred_logits import *
from ...assets.dataset.cc359 import *
from ...assets.batch_iter.patch_sampling_3d import *
from ...assets.architecture.unet3d import *
from ...assets.cross_val.cv_cc359 import *
from ...assets.metric.metrics_3d import *

import numpy as np

from ood.batch_iter.augmentations import rotate90, flip
from ood.metric.ood_metric import get_maxprob_score, get_entropy


n_experiments = 1

seed = 0

ood_ids = []
k = 3
# ax = 0

# load_x = lambda uid: flip(dataset.load_image(uid), ax=ax)
# load_y = lambda uid: flip(dataset.load_segm(uid), ax=ax)
# load_x = lambda uid: rotate90(dataset.load_image(uid), k=k)
# load_y = lambda uid: rotate90(dataset.load_segm(uid), k=k)
load_x = lambda uid: np.rot90(dataset.load_image(uid), k=k, axes=(SPATIAL_DIMS[0], SPATIAL_DIMS[2]))
load_y = lambda uid: np.rot90(dataset.load_segm(uid), k=k, axes=(SPATIAL_DIMS[0], SPATIAL_DIMS[2]))

final_metrics = {'dice_score': dice_metric, 'sdice_score': sdice_metric, 'entropy': get_entropy, 
                 'maxprob': get_maxprob_score}