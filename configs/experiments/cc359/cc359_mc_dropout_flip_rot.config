from ...assets.core import *
from ...assets.utils.no_pred import *
from ...assets.dataset.cc359 import *
from ...assets.batch_iter.patch_sampling_3d import *
from ...assets.architecture.unet3d import *
from ...assets.cross_val.cv_cc359 import *
from ...assets.metric.metrics_3d import *

from ood.torch.module.unet_mc_dropout import UNet3D_MC_Dropout
from ood.metric.metric import evaluate_individual_metrics_probably_with_ids_no_pred_mc_dropout
from ood.metric.ood_metric import get_inconsistency_metrics


saved_model_path = '/shared/experiments/ood_playground/cc359/mc_dropout/fold2/0.25/mc_10_200/experiment_0/model.pth'
ood_ids = []
N = 10

# k = 1 # angle of rotation (90 degrees)

# load_x = lambda uid: np.rot90(dataset.load_image(uid), k=k, axes=(SPATIAL_DIMS[0], SPATIAL_DIMS[1]))
# load_y = lambda uid: np.rot90(dataset.load_segm(uid), k=k, axes=(SPATIAL_DIMS[0], SPATIAL_DIMS[1]))

ax = 1 # axis to flip: 0 - symmetric horizontal, 1 - vertical

load_x = lambda uid: np.flip(dataset.load_image(uid), axis=SPATIAL_DIMS[:2][ax])
load_y = lambda uid: np.flip(dataset.load_segm(uid), axis=SPATIAL_DIMS[:2][ax])

p_dropout = 0.1
architecture = UNet3D_MC_Dropout(n_chans_in=n_chans_in, n_chans_out=n_chans_out, 
                                 n_filters_init=n_filters, p_dropout=p_dropout)

# final_metrics = {}

evaluate_individual_metrics = partial(
    evaluate_individual_metrics_probably_with_ids_no_pred_mc_dropout,
    load_y=load_y,
    load_x=load_x,
    predict=predict,
    predict_logit=predict_logit,
    predict_with_dropout=partial(predictions_mc_dropout, N=N),
    test_ids=test_ids,
    agg_function=partial(get_inconsistency_metrics, top_n_voxels=top_n_voxels),
    segm_functions=final_metrics,
)

run_experiment = run(
    fix_seed(seed=seed),
    lock_dir(),
    architecture.to(device),
    if_missing(lambda p: [train_model, save_model_state(architecture, p)], saved_model_path),
    load_model_state(architecture, saved_model_path),
    if_missing(predict_to_dir, output_path=test_predictions_path),
    if_missing(evaluate_individual_metrics, results_path='test_metrics'),
)